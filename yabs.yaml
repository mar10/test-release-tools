# Yabs Workflow Definition
# See https://github.com/mar10/yabs

file_version: yabs#1

config:
  repo: 'mar10/yabs-test'
  gh_auth:
    oauth_token_var: GITHUB_OAUTH_TOKEN
  version:
    - type: __version__        # First entry is master for synchronizing
      file: yabs_test/__init__.py
  max_increment: minor
  branches:                  # Allowed git branches
    - master

tasks:
  # 'cowsay':
  # - task: cowsay
  #   message: |
  #     About to start...

  # 'check': Assert preconditons and fail otherwise
  - task: check
    branches: master        # Current branch must be in this list
    # can_push: true          # Test if 'git push' would/would not succeed
    # github: true            # GitHub repo name valid and online accessible
    # clean: true             # Repo must/must not contain modifications
    os: null                # (str, list)
    # pypi: true              # `twine` is available, pypi package accessible
    python: ">=3.9"         # SemVer specifier
    # up_to_date: true        # everything pulled from remote
    venv: true              # running inside a virtual environment
    # version: true           # `setup.py --version` returns the configured version
    winget: null            #  `null`: smart mode (false if `--no-winget`)
    # yabs: ">=0.5"           # Minimal Yabs version
    
  # 'run': Run arbitrary shell command
  - task: exec
    args: ["tox", "-e", "lint"]     # shell command and optional arguments
    always: true            # `true`: run even in dry-run mode
    silent: true            # `true`: suppress output

  - task: exec
    args: ["tox"]           # shell command and optional arguments
    always: true            # `true`: run even in dry-run mode
    silent: true            # `true`: suppress output

  # 'bump': version by `--inc` argument
  - task: bump
    inc: null               # Use value passed as 'yabs run --inc INC'

    # 'commit': Commit modified files
  - task: commit
    add_known: true         # Commit with -a flag
    message: |
      Bump version to {version}

  # 'tag': Create an annotated tag
  - task: tag
    name: v{version}
    message: |
      Version {version}

  - task: build
    targets:
      - sdist
      - bdist_wheel
    # revert_bump_on_error: true

  # Build MSI Installer.
  - task: exec
    args: ["python", "setup_bdist_msi.py", "bdist_msi"]
    # always: true
    silent: true            # `true`: suppress output
    # stream: true
    ignore_errors: true  # Try it (will fail on non-Windows)
    add_artifacts:  # Add new files if any
      folder: "dist"  
      matches:
        bdist_msi: '.*\.msi'

  # 'push': Push changes and tags
  - task: push
    tags: true              # Use `--follow-tags`

  # 'pypi_release': Create a release on PyPI
  - task: pypi_release
    comment: |
      Release test with [Yabs](https://github.com/mar10/yabs).
    # upload:
    #   - sdist

  # 'github_release': Create a release on GitHub
  - task: github_release
    name: 'v{version}'
    message: |
      Released {version}

      [Changelog](https://github.com/{repo}/blob/master/CHANGELOG.md),
      [Commit details](https://github.com/{repo}/compare/{org_tag_name}...{tag_name}).
    # draft: true
    prerelease: null  # null: guess from version number format
    # upload:
    #   - sdist
    #   - bdist_wheel

  - task: bump
    inc: postrelease

  - task: commit
    add_known: true
    message: |
      Bump prerelease ({version}) [ci skip]

  - task: push

  - task: winget_release
    upload: "bdist_msi"
    package_id: foobar

  # - task: cowsay
  #   message: |
  #     Dear fellow cattle,
  #     We just released version {version}.
  #     (This message was brought to you by the 'yabs-cowsay' extension.)
